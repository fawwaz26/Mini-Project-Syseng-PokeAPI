{"ast":null,"code":"import React,{useState,useEffect}from'react';import{BrowserRouter as Router,Routes,Route}from'react-router-dom';import PokemonDetail from'./components/PokemonDetail';import Card from'./components/Card';import SearchBar from'./components/SearchBar';import Dropdown from'./components/Dropdown';import logo from'./logo.png';import'./styles/App.css';// Sesuaikan dengan styling Anda\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[pokemons,setPokemons]=useState([]);const[categories,setCategories]=useState(['All']);// Awalnya hanya berisi 'All'\nuseEffect(()=>{async function fetchPokemons(){try{const response=await fetch('https://pokeapi.co/api/v2/pokemon');const data=await response.json();setPokemons(data.results);}catch(error){console.error(\"Error fetching data: \",error);}}async function fetchCategories(){try{const response=await fetch('https://pokeapi.co/api/v2/type');const data=await response.json();setCategories(['All',...data.results.map(type=>type.name)]);// Tambahkan 'All' dan semua tipe ke dalam state\n}catch(error){console.error(\"Error fetching types: \",error);}}fetchPokemons();fetchCategories();},[]);async function handleSearch(value){if(!value){// Jika string pencarian kosong, tampilkan semua Pokémon\ntry{const response=await fetch('https://pokeapi.co/api/v2/pokemon?limit=30');const data=await response.json();setPokemons(data.results);}catch(error){console.error(\"Error fetching all pokemons: \",error);}}else{// Gunakan state pokemons yang ada untuk menyaring berdasarkan nama\n// Ini memerlukan fetching semua Pokémon terlebih dahulu dan menyimpannya di state\nconst filteredPokemons=pokemons.filter(pokemon=>pokemon.name.toLowerCase().includes(value.toLowerCase()));setPokemons(filteredPokemons);}}async function handleCategoryChange(category){if(category==='All'){// Jika kategori 'All' dipilih, tampilkan semua Pokémon\ntry{const response=await fetch('https://pokeapi.co/api/v2/pokemon?limit=30');const data=await response.json();setPokemons(data.results);}catch(error){console.error(\"Error fetching all pokemons: \",error);}}else{// Jika kategori selain 'All' dipilih, filter berdasarkan tipe\ntry{const response=await fetch(\"https://pokeapi.co/api/v2/type/\".concat(category));const data=await response.json();const filteredPokemons=data.pokemon.map(p=>p.pokemon);// Dapatkan daftar Pokémon dari tipe yang dipilih\nsetPokemons(filteredPokemons);}catch(error){console.error(\"Error fetching pokemons for category \".concat(category,\": \"),error);}}}return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"header\",{children:/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"Pok\\xE9dex\"})}),/*#__PURE__*/_jsxs(\"search\",{children:[/*#__PURE__*/_jsx(SearchBar,{onSearch:handleSearch}),/*#__PURE__*/_jsx(Dropdown,{onCategoryChange:handleCategoryChange,categories:categories})]}),/*#__PURE__*/_jsx(\"main\",{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(\"div\",{className:\"card-container\",children:pokemons.map(pokemon=>/*#__PURE__*/_jsx(Card,{name:pokemon.name,url:pokemon.url},pokemon.name))})}),/*#__PURE__*/_jsx(Route,{path:\"/pokemon/:pokemonId\",element:/*#__PURE__*/_jsx(PokemonDetail,{})})]})})]})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","PokemonDetail","Card","SearchBar","Dropdown","logo","jsx","_jsx","jsxs","_jsxs","App","pokemons","setPokemons","categories","setCategories","fetchPokemons","response","fetch","data","json","results","error","console","fetchCategories","map","type","name","handleSearch","value","filteredPokemons","filter","pokemon","toLowerCase","includes","handleCategoryChange","category","concat","p","children","className","src","alt","onSearch","onCategoryChange","path","element","url"],"sources":["C:/Users/Lenovo/Documents/GitHub/Mini-Project-Syseng---PokeAPI/pokedex/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport PokemonDetail from './components/PokemonDetail';\r\nimport Card from './components/Card';\r\nimport SearchBar from './components/SearchBar';\r\nimport Dropdown from './components/Dropdown';\r\nimport logo from './logo.png';\r\nimport './styles/App.css'; // Sesuaikan dengan styling Anda\r\n\r\nfunction App() {\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [categories, setCategories] = useState(['All']); // Awalnya hanya berisi 'All'\r\n\r\n  useEffect(() => {\r\n    async function fetchPokemons() {\r\n      try {\r\n        const response = await fetch('https://pokeapi.co/api/v2/pokemon');\r\n        const data = await response.json();\r\n        setPokemons(data.results);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data: \", error);\r\n      }\r\n    }\r\n\r\n    async function fetchCategories() {\r\n      try {\r\n        const response = await fetch('https://pokeapi.co/api/v2/type');\r\n        const data = await response.json();\r\n        setCategories(['All', ...data.results.map(type => type.name)]); // Tambahkan 'All' dan semua tipe ke dalam state\r\n      } catch (error) {\r\n        console.error(\"Error fetching types: \", error);\r\n      }\r\n    }\r\n\r\n    fetchPokemons();\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  async function handleSearch(value) {\r\n    if (!value) {\r\n      // Jika string pencarian kosong, tampilkan semua Pokémon\r\n      try {\r\n        const response = await fetch('https://pokeapi.co/api/v2/pokemon?limit=30');\r\n        const data = await response.json();\r\n        setPokemons(data.results);\r\n      } catch (error) {\r\n        console.error(\"Error fetching all pokemons: \", error);\r\n      }\r\n    } else {\r\n      // Gunakan state pokemons yang ada untuk menyaring berdasarkan nama\r\n      // Ini memerlukan fetching semua Pokémon terlebih dahulu dan menyimpannya di state\r\n      const filteredPokemons = pokemons.filter(pokemon =>\r\n        pokemon.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setPokemons(filteredPokemons);\r\n    }\r\n  }\r\n  \r\n\r\n  async function handleCategoryChange(category) {\r\n    if (category === 'All') {\r\n      // Jika kategori 'All' dipilih, tampilkan semua Pokémon\r\n      try {\r\n        const response = await fetch('https://pokeapi.co/api/v2/pokemon?limit=30');\r\n        const data = await response.json();\r\n        setPokemons(data.results);\r\n      } catch (error) {\r\n        console.error(\"Error fetching all pokemons: \", error);\r\n      }\r\n    } else {\r\n      // Jika kategori selain 'All' dipilih, filter berdasarkan tipe\r\n      try {\r\n        const response = await fetch(`https://pokeapi.co/api/v2/type/${category}`);\r\n        const data = await response.json();\r\n        const filteredPokemons = data.pokemon.map(p => p.pokemon); // Dapatkan daftar Pokémon dari tipe yang dipilih\r\n        setPokemons(filteredPokemons);\r\n      } catch (error) {\r\n        console.error(`Error fetching pokemons for category ${category}: `, error);\r\n      }\r\n    }\r\n  }\r\n  \r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <header>\r\n          <img src={logo} alt=\"Pokédex\" />\r\n        </header>\r\n        <search>\r\n          <SearchBar onSearch={handleSearch} />\r\n          <Dropdown onCategoryChange={handleCategoryChange} categories={categories} />\r\n        </search>\r\n        <main>\r\n          <Routes>\r\n            {/* Rute untuk halaman utama */}\r\n            <Route path=\"/\" element={\r\n              <div className=\"card-container\">\r\n                {pokemons.map((pokemon) => (\r\n                  <Card key={pokemon.name} name={pokemon.name} url={pokemon.url} />\r\n                ))}\r\n              </div>\r\n            } />\r\n            {/* Rute untuk halaman detail Pokémon */}\r\n            <Route path=\"/pokemon/:pokemonId\" element={<PokemonDetail />} />\r\n          </Routes>\r\n        </main>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}